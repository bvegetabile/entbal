// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// make_wts_ATE
arma::vec make_wts_ATE(const arma::vec& p, const arma::vec& TI);
RcppExport SEXP _entbal_make_wts_ATE(SEXP pSEXP, SEXP TISEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    rcpp_result_gen = Rcpp::wrap(make_wts_ATE(p, TI));
    return rcpp_result_gen;
END_RCPP
}
// make_wts_ATT
arma::vec make_wts_ATT(const arma::vec& p, const arma::vec& TI);
RcppExport SEXP _entbal_make_wts_ATT(SEXP pSEXP, SEXP TISEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    rcpp_result_gen = Rcpp::wrap(make_wts_ATT(p, TI));
    return rcpp_result_gen;
END_RCPP
}
// make_wts_ATC
arma::vec make_wts_ATC(const arma::vec& p, const arma::vec& TI);
RcppExport SEXP _entbal_make_wts_ATC(SEXP pSEXP, SEXP TISEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    rcpp_result_gen = Rcpp::wrap(make_wts_ATC(p, TI));
    return rcpp_result_gen;
END_RCPP
}
// make_wts_ATO
arma::vec make_wts_ATO(const arma::vec& p, const arma::vec& TI);
RcppExport SEXP _entbal_make_wts_ATO(SEXP pSEXP, SEXP TISEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    rcpp_result_gen = Rcpp::wrap(make_wts_ATO(p, TI));
    return rcpp_result_gen;
END_RCPP
}
// wtd_mean
double wtd_mean(const arma::vec& X, const arma::vec& TI, const arma::vec& w);
RcppExport SEXP _entbal_wtd_mean(SEXP XSEXP, SEXP TISEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(wtd_mean(X, TI, w));
    return rcpp_result_gen;
END_RCPP
}
// wtd_moment
double wtd_moment(const arma::vec& X, const arma::vec& TI, const arma::vec& w, const int mom);
RcppExport SEXP _entbal_wtd_moment(SEXP XSEXP, SEXP TISEXP, SEXP wSEXP, SEXP momSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const int >::type mom(momSEXP);
    rcpp_result_gen = Rcpp::wrap(wtd_moment(X, TI, w, mom));
    return rcpp_result_gen;
END_RCPP
}
// wtd_sd2
double wtd_sd2(const arma::vec& X, const arma::vec& TI, const arma::vec& w);
RcppExport SEXP _entbal_wtd_sd2(SEXP XSEXP, SEXP TISEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(wtd_sd2(X, TI, w));
    return rcpp_result_gen;
END_RCPP
}
// cov_mean_bal
double cov_mean_bal(const arma::vec& X, const arma::vec& TI, const arma::vec& w);
RcppExport SEXP _entbal_cov_mean_bal(SEXP XSEXP, SEXP TISEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_mean_bal(X, TI, w));
    return rcpp_result_gen;
END_RCPP
}
// cov_var_bal
double cov_var_bal(const arma::vec& X, const arma::vec& TI, const arma::vec& w);
RcppExport SEXP _entbal_cov_var_bal(SEXP XSEXP, SEXP TISEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_var_bal(X, TI, w));
    return rcpp_result_gen;
END_RCPP
}
// est_binary_te
double est_binary_te(const arma::vec& YO, const arma::vec& TI, const arma::vec& wts);
RcppExport SEXP _entbal_est_binary_te(SEXP YOSEXP, SEXP TISEXP, SEXP wtsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type YO(YOSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type wts(wtsSEXP);
    rcpp_result_gen = Rcpp::wrap(est_binary_te(YO, TI, wts));
    return rcpp_result_gen;
END_RCPP
}
// std_diff_means
double std_diff_means(const arma::vec X, const arma::vec TA, const arma::vec wts);
RcppExport SEXP _entbal_std_diff_means(SEXP XSEXP, SEXP TASEXP, SEXP wtsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type TA(TASEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type wts(wtsSEXP);
    rcpp_result_gen = Rcpp::wrap(std_diff_means(X, TA, wts));
    return rcpp_result_gen;
END_RCPP
}
// log_sd_ratio
double log_sd_ratio(const arma::vec X, const arma::vec TA, const arma::vec wts);
RcppExport SEXP _entbal_log_sd_ratio(SEXP XSEXP, SEXP TASEXP, SEXP wtsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type TA(TASEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type wts(wtsSEXP);
    rcpp_result_gen = Rcpp::wrap(log_sd_ratio(X, TA, wts));
    return rcpp_result_gen;
END_RCPP
}
// group_ESS
double group_ESS(const arma::vec& w, const arma::vec& TI);
RcppExport SEXP _entbal_group_ESS(SEXP wSEXP, SEXP TISEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TI(TISEXP);
    rcpp_result_gen = Rcpp::wrap(group_ESS(w, TI));
    return rcpp_result_gen;
END_RCPP
}
// ESS
arma::vec ESS(const arma::vec& w);
RcppExport SEXP _entbal_ESS(SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(ESS(w));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_entbal_make_wts_ATE", (DL_FUNC) &_entbal_make_wts_ATE, 2},
    {"_entbal_make_wts_ATT", (DL_FUNC) &_entbal_make_wts_ATT, 2},
    {"_entbal_make_wts_ATC", (DL_FUNC) &_entbal_make_wts_ATC, 2},
    {"_entbal_make_wts_ATO", (DL_FUNC) &_entbal_make_wts_ATO, 2},
    {"_entbal_wtd_mean", (DL_FUNC) &_entbal_wtd_mean, 3},
    {"_entbal_wtd_moment", (DL_FUNC) &_entbal_wtd_moment, 4},
    {"_entbal_wtd_sd2", (DL_FUNC) &_entbal_wtd_sd2, 3},
    {"_entbal_cov_mean_bal", (DL_FUNC) &_entbal_cov_mean_bal, 3},
    {"_entbal_cov_var_bal", (DL_FUNC) &_entbal_cov_var_bal, 3},
    {"_entbal_est_binary_te", (DL_FUNC) &_entbal_est_binary_te, 3},
    {"_entbal_std_diff_means", (DL_FUNC) &_entbal_std_diff_means, 3},
    {"_entbal_log_sd_ratio", (DL_FUNC) &_entbal_log_sd_ratio, 3},
    {"_entbal_group_ESS", (DL_FUNC) &_entbal_group_ESS, 2},
    {"_entbal_ESS", (DL_FUNC) &_entbal_ESS, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_entbal(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
